name: electerm-deb
on: 
  workflow_dispatch:
  schedule: 
    - cron: "07 12 * * *"

jobs: 
  build: 
    runs-on: ubuntu-latest
    steps: 
      - name: Set infos
        shell: bash {0}
        run: | 
          echo "AUR_PKG_NAME=electerm-deb" >> $GITHUB_ENV
          echo "PKG_FILE_URL=$(curl -sL https://api.github.com/repos/electerm/electerm/releases/latest | grep deb | grep download | sed -r "s|.*(https://github.com/electerm/electerm/releases/download/v(.*)/.*deb).*|\1|p" | head -n 1)" >> $GITHUB_ENV
      - name: Set version
        shell: bash {0}
        run: |
          echo "PKG_FILE_VER=$(echo ${{ env.PKG_FILE_URL }} | sed -r "s|.*/download/v(.*)/.*|\1|g" | head -n 1)" >> $GITHUB_ENV
      - name: Set filename
        shell: bash {0}
        run: |
          echo "PKG_FILE_NAME=electerm-${{ env.PKG_FILE_VER }}-linux-amd64.deb" >> $GITHUB_ENV
      - name: Set SSH & Git
        shell: bash {0}
        run: | 
          mkdir ~/.ssh
          ssh-keyscan -t "rsa,dsa,ecdsa,ed25519" aur.archlinux.org > ~/.ssh/known_hosts
          echo "${{ secrets.AUR_SSH_CONFIG }}" > ~/.ssh/config
          echo "${{ secrets.AUR_SSH_PRIVATE_KEY }}" > ~/.ssh/aur
          echo "${{ secrets.AUR_SSH_PUBLIC_KEY }}" > ~/.ssh/aur.pub
          chmod 600 ~/.ssh/aur
          git config --global user.name "${{ secrets.AUR_COMMIT_USERNAME }}"
          git config --global user.email "${{ secrets.AUR_COMMIT_EMAIL }}"
      - name: Checkout old aur
        shell: bash {0}
        run: | 
          git clone "ssh://aur@aur.archlinux.org/${{ env.AUR_PKG_NAME }}.git"
          cd ${{ env.AUR_PKG_NAME }}
          echo "AUR_PKG_VER=$(cat PKGBUILD | grep '^pkgver=.*' | sed -r 's|pkgver=(.*)$|\1|g')" >> $GITHUB_ENV
      - name: Compare versions
        shell: bash {0}
        run: | 
          if [[ "${{ env.PKG_FILE_VER }}" == "${{ env.AUR_PKG_VER }}" ]]; then
            echo "LATEST_VER=1" >> $GITHUB_ENV
          else
            echo "LATEST_VER=0" >> $GITHUB_ENV
          fi
      - name: Generate package checksum
        if: env.LATEST_VER == 0
        shell: bash {0}
        run: | 
          echo "PKG_FILE_SUM=$(curl -sL ${{ env.PKG_FILE_URL }} | sha512sum | cut -f 1 -d ' ' | head -n 1)" >> $GITHUB_ENV
      - name: Compile & Install pacman
        if: env.LATEST_VERSION == 0
        shell: bash {0}
        run: |
          sudo apt update
          sudo apt install build-essential meson ninja-build libarchive-dev libcurl4-openssl-dev libgpgme-dev libssl-dev nettle-dev
          git clone https://gitlab.archlinux.org/pacman/pacman.git
          cd pacman
          mkdir build && cd build
          meson ../
          ninja build -C .
          sudo ninja install
      - name: Modify PKGBUILD and commit
        if: env.LATEST_VER == 0
        shell: bash {0}
        run: |
          cd ${{ env.AUR_PKG_NAME }}
          sed -i "s|pkgver=.*|pkgver=${{ env.PKG_FILE_VER }}|g" PKGBUILD
          sed -i "s|sha512sums=.*|sha512sums=('${{ env.PKG_FILE_SUM }}')|g" PKGBUILD
          makepkg --printsrcinfo > .SRCINFO
          git commit -a -m "Update PKGBUILD to version ${{ env.PKG_FILE_VER }}"
          git push
